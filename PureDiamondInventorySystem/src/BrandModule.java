
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.*;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Sherlock Holmes
 */
public class BrandModule extends javax.swing.JFrame {

    /**
     * Creates new form BrandFrame
     */
    public BrandModule() {
        initComponents();
        table_load();
      
    }
    

 Connection con;         //create the connection object con
 PreparedStatement pst; // create the PreparedStatement object pst
 ResultSet rs;          // create the ResultSet object rs
 Statement stmt;        // create the Statement object stmt
 DefaultTableModel model = null;   
    public void connect(){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/db_inventory_lagria", "root", "");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BrandModule.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BrandModule.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    public void table_load(){
      try {
            connect();
            pst = con.prepareStatement("Select * From tbl_Brand");
            rs = pst.executeQuery();
            
            ResultSetMetaData RSD = rs.getMetaData();
            int count;
            
            count = RSD.getColumnCount();
            DefaultTableModel DTM = (DefaultTableModel)Brand_tbl.getModel();
            DTM.setRowCount(0);
            
            while(rs.next()){
                Vector v = new Vector();
                for(int i = 1; i < count; i++){
                    v.add(rs.getString("BrandID"));
                    v.add(rs.getString("BrandName"));
                    v.add(rs.getString("isActive"));

                }
               DTM.addRow(v);
            }
       
        } catch (SQLException ex) {
            Logger.getLogger(BrandModule.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    public void BrandSearch(String str){
        model = (DefaultTableModel)Brand_tbl.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        Brand_tbl.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
        
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Brand_tbl = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        TF_BrandName = new javax.swing.JTextField();
        TF_BrandID = new javax.swing.JTextField();
        CMB_isActive = new javax.swing.JComboBox<>();
        TF_Search = new javax.swing.JTextField();
        SearchBtn = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        DeleteBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        Add_Btn = new javax.swing.JButton();
        ResetBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Brand_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Brand ID", "Brand Name", "isActive"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Brand_tbl);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Brand ID:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Brand Name:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("isActive:");

        TF_BrandID.setEnabled(false);

        CMB_isActive.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes ", "No" }));
        CMB_isActive.setSelectedIndex(-1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TF_BrandName)
                    .addComponent(TF_BrandID)
                    .addComponent(CMB_isActive, 0, 127, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TF_BrandID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TF_BrandName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(CMB_isActive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        TF_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_SearchActionPerformed(evt);
            }
        });
        TF_Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TF_SearchKeyReleased(evt);
            }
        });

        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        jButton5.setText("Return");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        Add_Btn.setBackground(new java.awt.Color(204, 204, 204));
        Add_Btn.setText("Add");
        Add_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_BtnActionPerformed(evt);
            }
        });

        ResetBtn.setText("Reset");
        ResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Add_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(ResetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Add_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ResetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(TF_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SearchBtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jButton5)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TF_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchBtn))
                        .addGap(26, 26, 26)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 470));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Add_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_BtnActionPerformed
        try {
            
            connect();
            stmt = con.createStatement();
            
            String brandname = TF_BrandName.getText();
            String isActive = CMB_isActive.getSelectedItem().toString();
            
            if("".equals(brandname) || CMB_isActive.getSelectedItem().toString().isEmpty()){
                   JOptionPane.showMessageDialog(this, "All fields are required. Please ensure all fields are\n" +
                    "completed.");
            }else{
            
            String sql = "SELECT * FROM tbl_brand WHERE BrandName = '"+brandname+"'";   //Query for data that already exist
            ResultSet rs = stmt.executeQuery(sql);
            
            if(rs.next()){
                JOptionPane.showMessageDialog(this, "Brand Name has Already Exist");
            }else{
                
                pst = con.prepareStatement("insert into tbl_brand(BrandName, isActive)values(?,?)"); //Query for Inserting new data
                pst.setString(1, brandname);
		pst.setString(2, isActive);
                
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "BrandName has Added");
                table_load();
                
                TF_BrandID.setText("");
                TF_BrandName.setText("");
                CMB_isActive.setSelectedIndex(1);
            }
            
         }   
        } catch (SQLException ex) {
            Logger.getLogger(BrandModule.class.getName()).log(Level.SEVERE, null, ex);
        } catch(NullPointerException ex){
            JOptionPane.showMessageDialog(this, "All fields are required. Please ensure all fields are\n" +
                    "completed.");
        }
        
                  
    }//GEN-LAST:event_Add_BtnActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        try {
            connect();
            
            pst = con.prepareStatement("Select BrandID, BrandName, isActive From tbl_brand where BrandID = ?");
            int id = Integer.parseInt(TF_Search.getText());
            pst.setInt(1, id);
            ResultSet rs1 = pst.executeQuery();
            
            if(rs1.next()==false){
                JOptionPane.showMessageDialog(this, "Sorry Record Not Found");
                TF_BrandName.setText("");
            }else{
                TF_BrandID.setText(rs1.getString("BrandID"));
                TF_BrandName.setText(rs1.getString("BrandName"));
                CMB_isActive.setSelectedItem(rs1.getString("isActive"));     
            }
             
        } catch (SQLException ex) {
            Logger.getLogger(BrandModule.class.getName()).log(Level.SEVERE, null, ex);
        } catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "Use id number to update or search the brand");
        }
        
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        if(TF_Search.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please Enter ID number in the Search Bar");
        }
        else if(TF_BrandName.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "All fields are required. Please ensure all fields are\n" +
                "completed."); // For Empty TextFields
        }
        else{
            try {
                connect();
                stmt = con.createStatement();
                String ID = TF_BrandID.getText();
                String BrandName = TF_BrandName.getText();
                String isActive = CMB_isActive.getSelectedItem().toString();
            
                String sql = "SELECT BrandID, BrandName, isActive FROM tbl_brand WHERE BrandID = '"+ID+"' AND BrandName = '"+BrandName+"' AND isActive ='"+isActive+"'";  
                ResultSet rs1 = stmt.executeQuery(sql); //Query for Getting the No Action 

                if (rs1.next()) {
                        
                     if(ID != rs1.getString("BrandID")&&BrandName != rs1.getString("BrandName") && isActive != rs1.getString("isActive")){
                            //NO ACTION OCCUR
                     }
                    }
                
                    //====== Existing Message and Execution of Update ==================\\
                
                     else{
                         String sql2 = "SELECT BrandName, isActive FROM tbl_brand WHERE BrandName = '"+BrandName+"' except(SELECT BrandName, isActive FROM tbl_brand where BrandID = '"+ID+"')";  //Query for data that already exist
                         ResultSet rs12 = stmt.executeQuery(sql2); //Query for Existing Message and Update
                         
                        if (rs12.next()) {
                            
                            if (BrandName != rs12.getString("BrandName")) {
                                JOptionPane.showMessageDialog(this, "Already Exist"); //Existing Message
                            }
                        }
                        else{
                                pst = con.prepareStatement("update tbl_brand set BrandName = ?, isActive = ? where BrandID = ?");
                                pst.setString(1, BrandName);
                                pst.setString(2, isActive);
                                pst.setString(3, ID);
                                pst.executeUpdate();
                                
                                TF_BrandID.setText("");
                                TF_BrandName.setText("");
                                CMB_isActive.setSelectedIndex(-1);
                                
                                TF_BrandName.requestFocus();
                                
                                table_load();
                                JOptionPane.showMessageDialog(this, "Brand Updated Succesfully");
                        }
                     }
                    } catch (SQLException ex) {
                        Logger.getLogger(BrandModule.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

    }//GEN-LAST:event_editBtnActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        if (TF_Search.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter id number in the search bar");
        }else{
        try {
            stmt = con.createStatement();
            int ID = Integer.parseInt(TF_Search.getText());
            connect();
            String BrandName = TF_BrandName.getText();
            
            String sql = "SELECT * FROM tbl_items WHERE BrandID = '"+ID+"'";   
            ResultSet rs1 = stmt.executeQuery(sql);
           
           
            pst = con.prepareStatement("Delete From tbl_brand where BrandID = ?");
            pst.setInt(1, ID);

            if (rs1.next()) {
                JOptionPane.showMessageDialog(this, "Brand cannot be deleted. This item is referred to by\n" +
                "another object");
            }else{
                
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Record Deleteed");
                TF_BrandID.setText("");
                TF_BrandName.setText("");
                TF_Search.setText("");
                CMB_isActive.setSelectedIndex(-1);
                table_load();
            }

        } catch (SQLException ex) {
            Logger.getLogger(BrandModule.class.getName()).log(Level.SEVERE, null, ex);
        } catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "All fields are required. Please ensure all fields are\n" +
                    "completed.");
        }
        }
        
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void ResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetBtnActionPerformed
        TF_BrandID.setText("");
        TF_BrandName.setText("");
        TF_Search.setText("");
        CMB_isActive.setSelectedIndex(-1);
    }//GEN-LAST:event_ResetBtnActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        HomeScreen back  = new HomeScreen();
        back.setVisible(true);
        this.setVisible(false);
        this.setDefaultCloseOperation(BrandModule.EXIT_ON_CLOSE);
        this.dispose();
                     
    }//GEN-LAST:event_jButton5ActionPerformed

    private void TF_SearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF_SearchKeyReleased
        String search = TF_Search.getText();
        BrandSearch(search);
    }//GEN-LAST:event_TF_SearchKeyReleased

    private void TF_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_SearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_SearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BrandModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BrandModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BrandModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BrandModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BrandModule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_Btn;
    private javax.swing.JTable Brand_tbl;
    private javax.swing.JComboBox<String> CMB_isActive;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton ResetBtn;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTextField TF_BrandID;
    private javax.swing.JTextField TF_BrandName;
    private javax.swing.JTextField TF_Search;
    private javax.swing.JButton editBtn;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
